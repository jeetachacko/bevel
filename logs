
PLAY [all] *********************************************************************

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [install ajv-cli] *********************************************************
ok: [localhost]

TASK [set_fact] ****************************************************************
ok: [localhost]

TASK [Ensures build dir exists] ************************************************

TASK [check/directory : check if dir exists or not] ****************************
ok: [localhost]

TASK [check/directory : Ensures dir exists] ************************************
changed: [localhost]

TASK [create tempNetwork yaml file] ********************************************
changed: [localhost]

TASK [run schema validator on network.yaml] ************************************
changed: [localhost]

TASK [Remove the build directory and contents] *********************************
changed: [localhost]

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
ok: [localhost]

TASK [include_role : setup/kubectl] ********************************************

TASK [setup/kubectl : register temporary directory] ****************************
changed: [localhost]

TASK [setup/kubectl : check kubectl] *******************************************
ok: [localhost]

TASK [setup/kubectl : Download kubectl binary] *********************************
skipping: [localhost]

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
skipping: [localhost]

TASK [setup/kubectl : create bin directory] ************************************
skipping: [localhost]

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
skipping: [localhost] => (item=kubectl) 

TASK [setup/kubectl : Test kubectl installation] *******************************
ok: [localhost]

TASK [setup/kubectl : Changing the current context namespace to default] *******
changed: [localhost]

TASK [setup/kubectl : register temporary directory] ****************************
changed: [localhost]

TASK [setup/kubectl : check kubectl] *******************************************
ok: [localhost]

TASK [setup/kubectl : Download kubectl binary] *********************************
skipping: [localhost]

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
skipping: [localhost]

TASK [setup/kubectl : create bin directory] ************************************
skipping: [localhost]

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
skipping: [localhost] => (item=kubectl) 

TASK [setup/kubectl : Test kubectl installation] *******************************
ok: [localhost]

TASK [setup/kubectl : Changing the current context namespace to default] *******
changed: [localhost]

TASK [setup/kubectl : register temporary directory] ****************************
changed: [localhost]

TASK [setup/kubectl : check kubectl] *******************************************
ok: [localhost]

TASK [setup/kubectl : Download kubectl binary] *********************************
skipping: [localhost]

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
skipping: [localhost]

TASK [setup/kubectl : create bin directory] ************************************
skipping: [localhost]

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
skipping: [localhost] => (item=kubectl) 

TASK [setup/kubectl : Test kubectl installation] *******************************
ok: [localhost]

TASK [setup/kubectl : Changing the current context namespace to default] *******
changed: [localhost]

TASK [include_role : setup/helm] ***********************************************

TASK [setup/helm : register temporary directory] *******************************
changed: [localhost]

TASK [setup/helm : check helm] *************************************************
ok: [localhost]

TASK [setup/helm : Install helm] ***********************************************
skipping: [localhost]

TASK [setup/helm : Unzip helm archive] *****************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [setup/helm : Move helm binaries] *****************************************
skipping: [localhost] => (item=helm) 

TASK [setup/helm : Test helm installation] *************************************
ok: [localhost]

TASK [setup/helm : register temporary directory] *******************************
changed: [localhost]

TASK [setup/helm : check helm] *************************************************
ok: [localhost]

TASK [setup/helm : Install helm] ***********************************************
skipping: [localhost]

TASK [setup/helm : Unzip helm archive] *****************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [setup/helm : Move helm binaries] *****************************************
skipping: [localhost] => (item=helm) 

TASK [setup/helm : Test helm installation] *************************************
ok: [localhost]

TASK [setup/helm : register temporary directory] *******************************
changed: [localhost]

TASK [setup/helm : check helm] *************************************************
ok: [localhost]

TASK [setup/helm : Install helm] ***********************************************
skipping: [localhost]

TASK [setup/helm : Unzip helm archive] *****************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [setup/helm : Move helm binaries] *****************************************
skipping: [localhost] => (item=helm) 

TASK [setup/helm : Test helm installation] *************************************
ok: [localhost]

TASK [include_role : setup/vault] **********************************************

TASK [setup/vault : register temporary directory] ******************************
changed: [localhost]

TASK [setup/vault : check vault] ***********************************************
ok: [localhost]

TASK [setup/vault : Install vault client] **************************************
skipping: [localhost]

TASK [setup/vault : create bin directory] **************************************
skipping: [localhost]

TASK [setup/vault : Unzip vault archive] ***************************************
skipping: [localhost] => (item=vault) 

TASK [setup/vault : Test vault installation] ***********************************
ok: [localhost]

TASK [include_role : setup/aws-cli] ********************************************
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}, 'metrics': {'enabled': False, 'port': 9443}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'orderer_org': 'supplychain', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'cactus_connector': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincodes': [{'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'jeetachacko', 'password': '', 'url': 'github.com/jeetachacko/bevel-samples.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}], 'metrics': {'enabled': False, 'port': 9443}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'orderer_org': 'supplychain', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'cactus_connector': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincodes': [{'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'github_username', 'password': 'git_access_token', 'url': 'github.com/<username>/bevel-samples.git', 'branch': 'develop', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}]}]}}) 

TASK [include_role : setup/aws-auth] *******************************************
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}, 'metrics': {'enabled': False, 'port': 9443}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'orderer_org': 'supplychain', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'cactus_connector': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincodes': [{'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'jeetachacko', 'password': '', 'url': 'github.com/jeetachacko/bevel-samples.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}], 'metrics': {'enabled': False, 'port': 9443}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'orderer_org': 'supplychain', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'cactus_connector': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincodes': [{'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'github_username', 'password': 'git_access_token', 'url': 'github.com/<username>/bevel-samples.git', 'branch': 'develop', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}]}]}}) 

PLAY [ansible_provisioners] ****************************************************

TASK [include_role : setup/flux] ***********************************************

TASK [aws-cli : register temporary directory] **********************************
skipping: [localhost]

TASK [aws-cli : check aws cli] *************************************************
skipping: [localhost]

TASK [aws-cli : download aws cli] **********************************************
skipping: [localhost]

TASK [aws-cli : extract aws cli] ***********************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [aws-cli : install aws cli] ***********************************************
skipping: [localhost]

TASK [aws-cli : configuring aws] ***********************************************
skipping: [localhost]

TASK [aws-auth : register temporary directory] *********************************
skipping: [localhost]

TASK [aws-auth : check aws-authenticator] **************************************
skipping: [localhost]

TASK [aws-auth : create bin directory] *****************************************
skipping: [localhost]

TASK [aws-auth : Install aws-authenticator] ************************************
skipping: [localhost]

TASK [aws-auth : Test Kubernetes connection] ***********************************
skipping: [localhost]

TASK [helm : register temporary directory] *************************************
changed: [localhost]

TASK [helm : check helm] *******************************************************
ok: [localhost]

TASK [helm : Install helm] *****************************************************
skipping: [localhost]

TASK [helm : Unzip helm archive] ***********************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [helm : Move helm binaries] ***********************************************
skipping: [localhost] => (item=helm) 

TASK [helm : Test helm installation] *******************************************
ok: [localhost]

TASK [kubectl : register temporary directory] **********************************
changed: [localhost]

TASK [kubectl : check kubectl] *************************************************
ok: [localhost]

TASK [kubectl : Download kubectl binary] ***************************************
skipping: [localhost]

TASK [kubectl : Unarchive kubernetes-client] ***********************************
skipping: [localhost]

TASK [kubectl : create bin directory] ******************************************
skipping: [localhost]

TASK [kubectl : Copy kubectl binary to destination directory] ******************
skipping: [localhost] => (item=kubectl) 

TASK [kubectl : Test kubectl installation] *************************************
ok: [localhost]

TASK [kubectl : Changing the current context namespace to default] *************
changed: [localhost]

TASK [setup/flux : Install flux cli] *******************************************
changed: [localhost]

TASK [setup/flux : Update the ssh host to known hosts] *************************
changed: [localhost]

TASK [setup/flux : Install flux cli and bootstrap flux v2] *********************
skipping: [localhost]

TASK [setup/flux : Install flux cli and bootstrap flux v2] *********************
changed: [localhost]

TASK [aws-cli : register temporary directory] **********************************
skipping: [localhost]

TASK [aws-cli : check aws cli] *************************************************
skipping: [localhost]

TASK [aws-cli : download aws cli] **********************************************
skipping: [localhost]

TASK [aws-cli : extract aws cli] ***********************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [aws-cli : install aws cli] ***********************************************
skipping: [localhost]

TASK [aws-cli : configuring aws] ***********************************************
skipping: [localhost]

TASK [aws-auth : register temporary directory] *********************************
skipping: [localhost]

TASK [aws-auth : check aws-authenticator] **************************************
skipping: [localhost]

TASK [aws-auth : create bin directory] *****************************************
skipping: [localhost]

TASK [aws-auth : Install aws-authenticator] ************************************
skipping: [localhost]

TASK [aws-auth : Test Kubernetes connection] ***********************************
skipping: [localhost]

TASK [setup/flux : Install flux cli] *******************************************
changed: [localhost]

TASK [setup/flux : Update the ssh host to known hosts] *************************
changed: [localhost]

TASK [setup/flux : Install flux cli and bootstrap flux v2] *********************
skipping: [localhost]

TASK [setup/flux : Install flux cli and bootstrap flux v2] *********************
changed: [localhost]

TASK [aws-cli : register temporary directory] **********************************
skipping: [localhost]

TASK [aws-cli : check aws cli] *************************************************
skipping: [localhost]

TASK [aws-cli : download aws cli] **********************************************
skipping: [localhost]

TASK [aws-cli : extract aws cli] ***********************************************
skipping: [localhost]

TASK [create bin directory] ****************************************************
skipping: [localhost]

TASK [aws-cli : install aws cli] ***********************************************
skipping: [localhost]

TASK [aws-cli : configuring aws] ***********************************************
skipping: [localhost]

TASK [aws-auth : register temporary directory] *********************************
skipping: [localhost]

TASK [aws-auth : check aws-authenticator] **************************************
skipping: [localhost]

TASK [aws-auth : create bin directory] *****************************************
skipping: [localhost]

TASK [aws-auth : Install aws-authenticator] ************************************
skipping: [localhost]

TASK [aws-auth : Test Kubernetes connection] ***********************************
skipping: [localhost]

TASK [setup/flux : Install flux cli] *******************************************
changed: [localhost]

TASK [setup/flux : Update the ssh host to known hosts] *************************
changed: [localhost]

TASK [setup/flux : Install flux cli and bootstrap flux v2] *********************
skipping: [localhost]

TASK [setup/flux : Install flux cli and bootstrap flux v2] *********************
changed: [localhost]

TASK [Prepare nodes and clients ports for ambassador] **************************
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}, 'metrics': {'enabled': False, 'port': 9443}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'orderer_org': 'supplychain', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'cactus_connector': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincodes': [{'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'jeetachacko', 'password': '', 'url': 'github.com/jeetachacko/bevel-samples.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}], 'metrics': {'enabled': False, 'port': 9443}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'orderer_org': 'supplychain', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'cactus_connector': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincodes': [{'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'github_username', 'password': 'git_access_token', 'url': 'github.com/<username>/bevel-samples.git', 'branch': 'develop', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}]}]}}) 

TASK [include_role : setup/ambassador] *****************************************
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}, 'metrics': {'enabled': False, 'port': 9443}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'orderer_org': 'supplychain', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'cactus_connector': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincodes': [{'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'jeetachacko', 'password': '', 'url': 'github.com/jeetachacko/bevel-samples.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}], 'metrics': {'enabled': False, 'port': 9443}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'orderer_org': 'supplychain', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'cactus_connector': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincodes': [{'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'github_username', 'password': 'git_access_token', 'url': 'github.com/<username>/bevel-samples.git', 'branch': 'develop', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}]}]}}) 

TASK [include_role : setup/certmanager] ****************************************
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}, 'metrics': {'enabled': False, 'port': 9443}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'orderer_org': 'supplychain', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'cactus_connector': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincodes': [{'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'jeetachacko', 'password': '', 'url': 'github.com/jeetachacko/bevel-samples.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}], 'metrics': {'enabled': False, 'port': 9443}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'orderer_org': 'supplychain', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'cactus_connector': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincodes': [{'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'github_username', 'password': 'git_access_token', 'url': 'github.com/<username>/bevel-samples.git', 'branch': 'develop', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}]}]}}) 

TASK [include_role : setup/haproxy-ingress] ************************************
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}, 'metrics': {'enabled': False, 'port': 9443}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'orderer_org': 'supplychain', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'cactus_connector': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincodes': [{'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'jeetachacko', 'password': '', 'url': 'github.com/jeetachacko/bevel-samples.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}], 'metrics': {'enabled': False, 'port': 9443}}]}}) 
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'orderer_org': 'supplychain', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'minikube', 'aws': {'access_key': 'aws_access_key', 'secret_key': 'aws_secret_key'}, 'k8s': {'region': '', 'context': 'kubernetes-admin@kubernetes', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://127.0.0.1:8200', 'root_token': 'hvs.We98dyjQK35KJaquRDBHuBHh', 'secret_path': 'secretsv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/jeetachacko/bevel.git', 'branch': 'main', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/jeetachacko/bevel.git', 'username': 'jeetachacko', 'password': '', 'email': 'jeetachacko@gmail.com', 'private_key': '/home/bevel/build/id_rsa'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'cactus_connector': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincodes': [{'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'github_username', 'password': 'git_access_token', 'url': 'github.com/<username>/bevel-samples.git', 'branch': 'develop', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}]}]}}) 

PLAY [ansible_provisioners] ****************************************************

TASK [Remove build directory] **************************************************
changed: [localhost]

TASK [Create namespace and Vault auth for each organization] *******************

TASK [Checking if the namespace supplychain-net already exists] ****************

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace supplychain-net is created] ***
ok: [localhost]

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
skipping: [localhost]

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace supplychain-net is created] ***
skipping: [localhost]

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
skipping: [localhost]

TASK [create/namespace_vaultauth : Set Variable] *******************************
ok: [localhost]

TASK [Create namespaces] *******************************************************
skipping: [localhost]

TASK [Create vault reviewer service account for Organizations] *****************
skipping: [localhost]

TASK [Create vault auth service account for Organizations] *********************
skipping: [localhost]

TASK [Create clusterrolebinding for Ordrers] ***********************************
skipping: [localhost]

TASK [Git Push] ****************************************************************

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
ok: [localhost]

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
